<!DOCTYPE html>
<html lang="en">
  <%
  let dashboardBt ='';
  if (name == "admin") {
    dashboardBt = '<li class="nav-item"><a class="nav-link" href="/admin/dashboard">Dashborad <span class="sr-only">(current)</span></a></li>';
  }
  %>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS" crossorigin="anonymous">
  <link rel="stylesheet" href="/stylesheets/mystyle.css">
  <title>web</title>
</head>

<body class="bgColor2">
  <nav class="navbar navbar-expand-lg navbar-light bgTransparent">
    <a class="navbar-brand" href="#">
      <img src="/images/si.jpg" width="30" height="30" class="d-inline-block align-top" alt="">
      Scientific Computing
    </a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav mr-auto">
        <li>
          <button type="button" class="btn btn-danger"><%= name  %></button>
        </li>
        <li class="nav-item active">
          <a class="nav-link" href="/landing">Home <span class="sr-only">(current)</span></a>
        </li>

        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Content
          </a>
          <div class="dropdown-menu" aria-labelledby="navbarDropdown">
            <a class="dropdown-item" href="/matrix/matrixmultiplication">Matrix Multiplication</a>
            <a class="dropdown-item" href="/norm">Norm calculator</a>
            <a class="dropdown-item" href="/linearequation">Linear equation calculator</a>
            <a class="dropdown-item" href="/interpolation">Interpolation</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" href="#">Something else here</a>
          </div>
        </li>
        <%- dashboardBt %>
        <li class="nav-item">
          <a class="nav-link" href="/logout">Log out <span class="sr-only">(current)</span></a>
        </li>

        <!-- <li class="nav-item">
        <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>
      </li> -->
      </ul>
      <!-- <form class="form-inline my-2 my-lg-0">
      <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
      <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
    </form> -->
    </div>
  </nav>
  <!-- <div class="jumbotron jumbotron-fluid bgTransparent">

    <div class="container c2">
      <h1 class="display-4">Scientific Computing</h1>
      <p class="lead">Topic selector</p>
    </div>
  </div> -->
  <!-- <div class="container c4">
    <h6 class="display-6">Welcome .. (Some user info)</h1>
  </div> -->
  <div class="container">
    <div class="row my-5 ">
      <div class="col-12">
        <div class="card">
          <div class="row justify-content-around my-5 margin-15" id="changableContent2">
            <div class="col-sm-5 col-12">
              <div class="card">
                <div class="card-body">
                  <h1 class="card-title">Matrix A</h1>
                  <h6 class="card-subtitle mb-2 text-muted">Enter dimension of Matrix A</h6>
                  <h6 class="card-subtitle mb-2 text-muted">Row</h6>
                  <select class="form-control" id="matrixARowSelect">
                    <% for(let i=1;i<=100;i++){ %>
                    <option value="<%= i %>">
                      <%= i %>
                    </option>
                    <%}%>
                  </select>
                  <br>
                  <h6 class="card-subtitle mb-2 text-muted">Column</h6>
                  <select class="form-control" id="matrixAColSelect" onchange=<%="changeBRow()"%>>
                    <% for(let i=1;i<=100;i++){ %>
                    <option value="<%= i %>">
                      <%= i %>
                    </option>
                    <%}%>
                  </select>



                </div>
              </div>
            </div>
            <div class="col-sm-5 col-12">
              <div class="card">
                <div class="card-body">
                  <h1 class="card-title">Matrix B</h1>
                  <h6 class="card-subtitle mb-2 text-muted">Enter dimension of Matrix B</h6>
                  <h6 class="card-subtitle mb-2 text-muted">Row</h6>
                  <select class="form-control" id="matrixBRowSelect" onchange=<%="changeACol()"%>>
                    <% for(let i=1;i<=100;i++){ %>
                    <option value="<%= i %>">
                      <%= i %>
                    </option>
                    <%}%>
                  </select>
                  <br>
                  <h6 class="card-subtitle mb-2 text-muted">Column</h6>
                  <select class="form-control" id="matrixBColSelect">
                    <% for(let i=1;i<=100;i++){ %>
                    <option value="<%= i %>">
                      <%= i %>
                    </option>
                    <%}%>
                  </select>
                </div>
              </div>
            </div>
          </div>
          <div class="row justify-content-center my-3 p-2 margin-15" id="changableContent1">
            <button type="button" class="btn btn-primary" onclick="createTable()">Set matrices</button>
          </div>


        </div>

      </div>
    </div>



  </div>


  <footer>
    <div class="jumbotron bgTransparent">

      <div class="col-6 col-sm-6">
        <img src="/images/SIITlogo.jpeg" width="100" height="70" class=" " alt="">
      </div>
      <div class="col-6 col-sm-6">
        <p class="lead">This is part of <strong>SIIT</strong> senior project. Created by <strong>G45</strong> </p>
        <hr>
        <!-- <a href="#">Facebook</a>
        <a href="#">Twitter</a> -->
      </div>
    </div>




  </footer>
  <!-- <img src="../chaweng.jpg" class="img-fluid" alt="Responsive image"> -->
  <!-- Optional JavaScript -->
  <!-- jQuery first, then Popper.js, then Bootstrap JS -->
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js" integrity="sha384-wHAiFfRlMFy6i5SRaxvfOCifBUQy1xHdJ/yoi7FRNXMRBu5WHdZYu1hA6ZOblgut" crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js" integrity="sha384-B0UglyR+jN6CkvvICOB2joaf5I4l3gm9GU6Hc1og6Ls7i6U/mkkaduKaBhlAXv9k" crossorigin="anonymous"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>



  <script type="text/javascript">
    var rowA;
    var colA;
    var rowB;
    var colB;
    var rowC;
    var colC;

    function changeBRow() {
      let colAVal = document.getElementById("matrixAColSelect").value;
      document.getElementById("matrixBRowSelect").value = colAVal;
    }

    function changeACol() {
      let rowBVal = document.getElementById("matrixBRowSelect").value;
      document.getElementById("matrixAColSelect").value = rowBVal;
    }

    function createTableForMatrixA() {
      rowA = document.getElementById("matrixARowSelect").value;
      colA = document.getElementById("matrixAColSelect").value;
      let headColA = "";
      let temp1 = "";

      // loop head
      for (let i = 1; i < parseInt(colA) + 1; i++) {
        headColA += '<th scope="col">' + "A" + i + '</th>';
      }
      // loop input
      for (let k = 1; k < parseInt(rowA) + 1; k++) {
        temp1 += '<tr><th scope="row">' + k + '</th>';
        for (let u = 1; u < parseInt(colA) + 1; u++) {
          let inputAId = "a" + k + u;
          console.log(inputAId);
          temp1 += '<td>' + '<input type="text" class="form-control form-control-sm width2" id=' + inputAId + ' value="">' + '</td>';
        }
        temp1 += '</tr>';
      }
      let aTable = '<div class="col-12 overflow-auto mx-2"><table class="table table-bordered  table-striped table-sm" ><thead><tr><th scope="col">#</th>' + headColA + '</tr></thead><tbody>' + temp1 + '</tbody></table></div>';

      // $('#changableContent1').append(aTable);
      createTableForMatrixB(aTable);
    }

    function createTableForMatrixB(aTable) {
      rowB = document.getElementById("matrixBRowSelect").value;
      colB = document.getElementById("matrixBColSelect").value;
      let headColB = "";
      let temp2 = "";

      // loop head
      for (let i = 1; i < parseInt(colB) + 1; i++) {
        headColB += '<th scope="col">' + "B" + i + '</th>';
      }
      // loop input
      for (let k = 1; k < parseInt(rowB) + 1; k++) {
        temp2 += '<tr><th scope="row">' + k + '</th>';
        for (let u = 1; u < parseInt(colB) + 1; u++) {
          let inputBId = "b" + k + u;
          console.log(inputBId);
          temp2 += '<td>' + '<input type="text" class="form-control form-control-sm width2" id=' + inputBId + ' value="">' + '</td>';
        }
        temp2 += '</tr>';
      }
      let bTable = '<div class="col-12 overflow-auto mx-2"><table class="table table-bordered  table-striped table-sm " ><thead><tr><th scope="col">#</th>' + headColB + '</tr></thead><tbody>' + temp2 + '</tbody></table></div>';
      document.getElementById("changableContent2").innerHTML = "";
      document.getElementById("changableContent1").innerHTML = "";
      $('#changableContent1').removeClass("my-5");
      $('#changableContent1').append('<div class="col-12 mb-2"><h2>Enter input matrix A</h2></div>');
      $('#changableContent1').append(aTable);
      $('#changableContent1').append('<div class="col-12 mb-2"><h2>Enter input matrix B</h2></div>');
      $('#changableContent1').append(bTable);
      $('#changableContent1').append('<div class="col-12 mb-2"><button type="button" class="btn btn-primary" onclick="matricesPreparing()">Multiply matrices</button></div>');

    }

    function createTable() {
      createTableForMatrixA();
    }
    function processMatrixToServer(maA, maB){

      console.log(maA);
      console.log(maB);
      $.post("matrixcalculate",
      {
        matrixA : [maA],
        matrixB : [maB]
      },
      function(data,status){
        let solution = data.solution;
        let receive = data.result;

        // alert("Dataarray lenght: " + receive.length + "\nStatus: " + status);
        console.log("dimension result"+rowA+"x"+colB);
        console.log("status:="+status);
        for (let i = 0; i < receive.length; i++) {
          for(let j =0; j<receive[i].length;j++){
              // console.log(receive[i][j]);
              console.log(solution);
              console.log("");
          }
        }
        document.getElementById("changableContent1").innerHTML = "";
        $('#changableContent1').append("<h1>Solution</h1>");
        createSolutionTableForMatrixC(solution);
        $('#changableContent1').append("<h1>Answer</h1>");
        createTableForMatrixC(receive);
        $('#changableContent1').append('<a href="/matrix/matrixmultiplication"  class="btn btn-primary">Go back</a>');
      });
    }

    function matricesPreparing() {
      let toSendMatrixA = [];
      let toSendMatrixB = [];
      let tableAId;
      let tableBId;
      let allowToSend = true;
      // for toSendMatrixA
      console.log("for loop matrix A");
      for (let i = 1; i < parseInt(rowA) + 1; i++) {
        let tempRowForA = [];
        for (let j = 1; j < parseInt(colA) + 1; j++) {
          tableAId = "a" + i + j;
          // console.log(document.getElementById(tableAId).value);
          if (!isFinite(document.getElementById(tableAId).value)) {
            allowToSend = false;
            break;
          }
          else{
            tempRowForA.push(document.getElementById(tableAId).value);
            console.log(tempRowForA);
          }
        }
        if(allowToSend){
          toSendMatrixA.push(tempRowForA);
        }
      }
      console.log(toSendMatrixA);
      // for toSendMatrixB
      console.log("for loop matrix B");
      for (let i = 1; i < parseInt(rowB) + 1; i++) {
        let tempRowForB = [];
        for (let j = 1; j < parseInt(colB) + 1; j++) {
          tableBId = "b" + i + j;
          if (!isFinite(document.getElementById(tableBId).value)) {
            allowToSend = false;
            break;
          }
          else{
            tempRowForB.push(document.getElementById(tableBId).value);
            console.log(tempRowForB);
          }
        }
        if(allowToSend){
          toSendMatrixB.push(tempRowForB);
        }
      }
      console.log(toSendMatrixB);

      if(allowToSend){
        processMatrixToServer(toSendMatrixA,toSendMatrixB);
      }
      else {
        $('#changableContent1').append("<h1>Error some input is not a number.</h1>");
      }

    }
    function createTableForMatrixC(dataArrayToShow) {
      rowC = rowA;
      colC = colB;
      let headColC = "";
      let temp3 = "";

      // loop head
      for (let i = 1; i < parseInt(colC) + 1; i++) {
        headColC += '<th scope="col">' + "C" + i + '</th>';
      }
      // loop input
      for (let k = 1; k < parseInt(rowC) + 1; k++) {
        temp3 += '<tr><th scope="row">' + k + '</th>';
        for (let u = 1; u < parseInt(colC) + 1; u++) {
          // let inputAId = "a" + k + u;
          // console.log(inputAId);
          temp3 += '<td>' +  dataArrayToShow[k-1][u-1] + '</td>';
        }
        temp3 += '</tr>';
      }
      let cTable = '<div class="col-12 overflow-auto mx-2"><table class="table table-bordered  table-striped table-sm" ><thead><tr><th scope="col">#</th>' + headColC + '</tr></thead><tbody>' + temp3 + '</tbody></table></div>';
      $('#changableContent1').append(cTable);

    }
    function createSolutionTableForMatrixC(solutionArray) {
      rowC = rowA;
      colC = colB;
      let headColC = "";
      let temp3 = "";

      // loop head
      for (let i = 1; i < parseInt(colC) + 1; i++) {
        headColC += '<th scope="col">' + "C" + i + '</th>';
      }
      // loop input
      for (let k = 1; k < parseInt(rowC) + 1; k++) {
        temp3 += '<tr><th scope="row">' + k + '</th>';
        for (let u = 1; u < parseInt(colC) + 1; u++) {
          // let inputAId = "a" + k + u;
          // console.log(inputAId);
          temp3 += '<td>' +  solutionArray[k-1][u-1] + '</td>';
        }
        temp3 += '</tr>';
      }
      let cTable = '<div class="col-12 overflow-auto mx-2"><table class="table table-bordered  table-striped table-sm" ><thead><tr><th scope="col">#</th>' + headColC + '</tr></thead><tbody>' + temp3 + '</tbody></table></div>';
      $('#changableContent1').append(cTable);

    }

  </script>
</body>

</html>
